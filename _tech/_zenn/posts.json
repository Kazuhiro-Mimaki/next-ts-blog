[{"title":"コンテナで試すポートフォワード","link":"https://zenn.dev/b1essk/articles/port-forward-docker","content":"ホストからコンテナ内部にアクセスしようとした際に ポートフォワード という言葉を知ったのでまとめます。\n環境は公式の nginx イメージを用いて構築します。\nhttps://hub.docker.com/_/nginx/\n\n ポートフォワードとは\nポートフォワードとはポートの紐付けです。\nコンテナのような仮想環境を利用する際には、ホスト側からアクセスするためにポートを紐づける必要があります。\n今回は勉強がてら Docker で色々試してみます。\n\n コンテナを立ち上げる\nnginx イメージを pull してきてコンテナを立ち上げます。\n-pオプションで 外部からアクセスされるポート番...","isoDate":"2021-06-20T09:25:41.000Z","dateMiliSeconds":1624181141000},{"title":"Contextで状態管理","link":"https://zenn.dev/b1essk/articles/react-state-management","content":"\n はじめに\nReact初心者です。\nReactのContextで状態管理をする方法について学習したのでまとめてみました。\n\n 普通に書くと...？\nとにかく props 経由でバケツリレーをしていることが伝わればと思います。\n実際に使うのは最下層のChildComponentなのに、経由するコンポーネント全てに props を渡してあげないといけません。\nexport const RootComponent = () =&gt; {\n  const theme = \"hoge\";\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;ルートコンポーネント...","isoDate":"2021-04-21T23:58:23.000Z","dateMiliSeconds":1619049503000},{"title":"【React】ルーティング設定","link":"https://zenn.dev/b1essk/articles/react-routing","content":"React 初心者です。\nReact のルーティングについて学習したのでまとめてみました。\n\n 基本的なルーティング\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    &lt;BrowserRouter&gt;\n      &lt;Link to=\"/\"&gt;Home&lt;/Link&gt;\n      &lt;Link to=\"/about\"&gt;About&lt;/Link&gt;\n      &lt;Link to=\"/...","isoDate":"2021-04-18T04:59:24.000Z","dateMiliSeconds":1618721964000},{"title":"【React】再レンダリングの仕組みと最適化","link":"https://zenn.dev/b1essk/articles/react-re-rendering","content":"React初心者です。\nReactのレンダリングについて学習したのでまとめてみました。\n\n Reactが再レンダリングするタイミング\n基本的にReactで再レンダリングが起きるタイミングは以下の3つ。\n\nstateが更新された時\npropsが更新された時\n親コンポーネントが再レンダリングされた時\n\n\n 1. stateが更新された時\n\nsrc/App.jsx\nimport { useState } from \"react\";\n\nexport default function App() {\n  console.log(\"App\");\n  const [text, setText] = u...","isoDate":"2021-03-16T11:27:12.000Z","dateMiliSeconds":1615894032000},{"title":"【PATHを通す】を理解する","link":"https://zenn.dev/b1essk/articles/0785ea4f88d9ae","content":"PATHを通す の意味がよくわからんので、色々調べました。\n\n そもそもPATHとは\nPATHとは環境変数の1つ。\n環境変数とはPC環境についての変数で、すでに多くの環境変数が設定されている。\nTerminalで\n$ env\nと入力すると、設定されているすべての環境変数が表示される。\nPWD=/Users/hogehoge\nSHELL=/bin/zsh\nPATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\nCOLORTERM=truecolor\nHOME=/Users/hogehoge\nUSER=hogehoge\nLOGNAME=hogeho...","isoDate":"2021-01-13T23:51:38.000Z","dateMiliSeconds":1610581898000},{"title":"覚えておくと便利なGitコマンド集","link":"https://zenn.dev/b1essk/articles/fcac50a00caaf2","content":"これまで出会ったGitコマンドを備忘録として残しておこうかなと思います。\n初めて見るコマンドがあったらぜひ使ってみてください！\n\n ブランチを改名したい\nローカルでブランチを切った時からリモートにpushする時までで、ブランチを改名したいタイミングってありますよね。そういう時はこのコマンドで簡単に改名できます。\n$ git branch -m [&lt;oldbranch&gt;] &lt;newbranch&gt;\n\n 変更内容を一時的に保存・退避したい\nコミットはしたくないが、ブランチ切り替えなどで一時的に変更内容を保存・退避させておきたい時に便利です。\nstashした変更はshow...","isoDate":"2021-01-13T09:55:28.000Z","dateMiliSeconds":1610531728000},{"title":"GitHub CLIを使ってみる","link":"https://zenn.dev/b1essk/articles/2e9c84277d3613","content":"\n GitHub CLIとは？\nGitHub CLIとは、その名の通り、コマンドライン上でGitHubの操作を行えるCLIツールです。\n新規でリポジトリを作成したい場合やPRを確認したい場合などに、ブラウザを開かなくても操作できるので非常に便利です。\nhttps://cli.github.com/\n\n インストール\nMacの場合はbrewでインストール。\n$ brew install gh\n\n 認証\nCLIコマンドを利用するためにはGitHubアカウントでログインする必要があります。\nGitHub.comを選択。\n? What account do you want to log int...","isoDate":"2021-01-09T00:24:37.000Z","dateMiliSeconds":1610151877000}]
